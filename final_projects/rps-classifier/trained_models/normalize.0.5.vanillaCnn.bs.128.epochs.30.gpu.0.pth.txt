Train: 1789
Valid: 596
Test: 597
ConvolutionalClassifier(
  (blocks): Sequential(
    (0): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(3, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(4, 4, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(4, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(5, 5, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(5, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (3): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (4): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (5): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (6): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (7): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (8): ConvolutionBlock(
      (layers): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU()
        (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): ReLU()
        (5): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (layers): Sequential(
    (0): Linear(in_features=512, out_features=50, bias=True)
    (1): ReLU()
    (2): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): Linear(in_features=50, out_features=10, bias=True)
    (4): LogSoftmax(dim=-1)
  )
)
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
NLLLoss()
Epoch 1 - |param|=5.30e+01 |g_param|=4.65e+01 loss=2.3552e+00 accuracy=0.1533
Validation - loss=2.2157e+00 accuracy=0.3054 best_loss=inf
Epoch 2 - |param|=5.37e+01 |g_param|=1.85e+01 loss=1.7241e+00 accuracy=0.5815
Validation - loss=2.8518e+00 accuracy=0.3056 best_loss=2.2157e+00
Epoch 3 - |param|=5.40e+01 |g_param|=2.93e+01 loss=1.2328e+00 accuracy=0.7264
Validation - loss=2.7066e+00 accuracy=0.3759 best_loss=2.2157e+00
Epoch 4 - |param|=5.42e+01 |g_param|=1.69e+01 loss=5.1144e-01 accuracy=0.9347
Validation - loss=2.3228e+00 accuracy=0.5531 best_loss=2.2157e+00
Epoch 5 - |param|=5.44e+01 |g_param|=2.93e+01 loss=4.3859e-01 accuracy=0.9099
Validation - loss=1.9662e+00 accuracy=0.5462 best_loss=2.2157e+00
Epoch 6 - |param|=5.45e+01 |g_param|=6.12e+01 loss=5.0591e-01 accuracy=0.8578
Validation - loss=1.8132e+00 accuracy=0.6163 best_loss=1.9662e+00
Epoch 7 - |param|=5.46e+01 |g_param|=1.64e+01 loss=3.3432e-01 accuracy=0.9204
Validation - loss=1.6590e+00 accuracy=0.6049 best_loss=1.8132e+00
Epoch 8 - |param|=5.48e+01 |g_param|=1.65e+01 loss=2.8941e-01 accuracy=0.9410
Validation - loss=1.7370e+00 accuracy=0.5994 best_loss=1.6590e+00
Epoch 9 - |param|=5.48e+01 |g_param|=9.03e+00 loss=1.1328e-01 accuracy=0.9768
Validation - loss=2.0401e+00 accuracy=0.5758 best_loss=1.6590e+00
Epoch 10 - |param|=5.49e+01 |g_param|=1.11e+01 loss=1.3767e-01 accuracy=0.9775
Validation - loss=1.9153e+00 accuracy=0.6379 best_loss=1.6590e+00
Epoch 11 - |param|=5.49e+01 |g_param|=1.32e+01 loss=6.7006e-02 accuracy=0.9839
Validation - loss=2.0938e+00 accuracy=0.5435 best_loss=1.6590e+00
Epoch 12 - |param|=5.50e+01 |g_param|=7.72e+00 loss=4.9889e-02 accuracy=0.9902
Validation - loss=1.8796e+00 accuracy=0.6419 best_loss=1.6590e+00
Epoch 13 - |param|=5.50e+01 |g_param|=2.09e+01 loss=7.2418e-02 accuracy=0.9828
Validation - loss=1.7739e+00 accuracy=0.6490 best_loss=1.6590e+00
Epoch 14 - |param|=5.51e+01 |g_param|=2.18e+01 loss=1.9017e-01 accuracy=0.9512
Validation - loss=2.1864e+00 accuracy=0.5293 best_loss=1.6590e+00
Epoch 15 - |param|=5.52e+01 |g_param|=1.68e+01 loss=2.6315e-01 accuracy=0.9107
Validation - loss=1.5060e+00 accuracy=0.6343 best_loss=1.6590e+00
Epoch 16 - |param|=5.53e+01 |g_param|=1.18e+01 loss=1.1624e-01 accuracy=0.9625
Validation - loss=1.4674e+00 accuracy=0.6218 best_loss=1.5060e+00
Epoch 17 - |param|=5.53e+01 |g_param|=1.16e+01 loss=8.3246e-02 accuracy=0.9794
Validation - loss=1.3856e+00 accuracy=0.6102 best_loss=1.4674e+00
Epoch 18 - |param|=5.54e+01 |g_param|=5.99e+00 loss=2.8734e-02 accuracy=0.9990
Validation - loss=1.3581e+00 accuracy=0.6969 best_loss=1.3856e+00
Epoch 19 - |param|=5.54e+01 |g_param|=1.20e+01 loss=4.9180e-02 accuracy=0.9868
Validation - loss=1.7014e+00 accuracy=0.6304 best_loss=1.3581e+00
Epoch 20 - |param|=5.54e+01 |g_param|=4.42e+00 loss=1.9412e-02 accuracy=0.9983
Validation - loss=1.9119e+00 accuracy=0.6010 best_loss=1.3581e+00
Epoch 21 - |param|=5.54e+01 |g_param|=5.81e+00 loss=1.9126e-02 accuracy=0.9979
Validation - loss=1.9432e+00 accuracy=0.6451 best_loss=1.3581e+00
Epoch 22 - |param|=5.55e+01 |g_param|=5.55e+00 loss=3.4933e-02 accuracy=0.9950
Validation - loss=2.2551e+00 accuracy=0.5636 best_loss=1.3581e+00
Epoch 23 - |param|=5.55e+01 |g_param|=1.21e+01 loss=6.6193e-02 accuracy=0.9805
Validation - loss=1.8941e+00 accuracy=0.5714 best_loss=1.3581e+00
Epoch 24 - |param|=5.56e+01 |g_param|=1.01e+01 loss=6.4845e-02 accuracy=0.9865
Validation - loss=1.6568e+00 accuracy=0.6527 best_loss=1.3581e+00
Epoch 25 - |param|=5.56e+01 |g_param|=7.67e+00 loss=3.9887e-02 accuracy=0.9862
Validation - loss=1.8499e+00 accuracy=0.6028 best_loss=1.3581e+00
Epoch 26 - |param|=5.57e+01 |g_param|=1.48e+01 loss=7.3571e-02 accuracy=0.9691
Validation - loss=1.7684e+00 accuracy=0.6204 best_loss=1.3581e+00
Epoch 27 - |param|=5.57e+01 |g_param|=1.49e+01 loss=7.3218e-02 accuracy=0.9840
Validation - loss=1.5117e+00 accuracy=0.6162 best_loss=1.3581e+00
Epoch 28 - |param|=5.58e+01 |g_param|=1.01e+01 loss=5.8682e-02 accuracy=0.9736
Validation - loss=1.4526e+00 accuracy=0.6458 best_loss=1.3581e+00
Epoch 29 - |param|=5.58e+01 |g_param|=4.26e+00 loss=2.2388e-02 accuracy=0.9923
Validation - loss=1.5871e+00 accuracy=0.6457 best_loss=1.3581e+00
Epoch 30 - |param|=5.58e+01 |g_param|=1.53e+00 loss=9.1948e-03 accuracy=0.9992
Validation - loss=1.6867e+00 accuracy=0.6304 best_loss=1.3581e+00
====== PREDICT TEST DATA ======
Test: 597
1/5 - loss: 1.7015103101730347, accuracy: 0.6171875
2/5 - loss: 1.5804579257965088, accuracy: 0.640625
3/5 - loss: 1.9017695188522339, accuracy: 0.625
4/5 - loss: 2.0744552612304688, accuracy: 0.5859375
5/5 - loss: 1.751214623451233, accuracy: 0.5764706134796143
TEST DATA ACCURACY: 0.6090441346168518
